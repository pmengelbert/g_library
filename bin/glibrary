#!/usr/bin/env ruby
require 'json'
require 'optparse'
require 'io/console'

require_relative '../common/api_query'
require_relative '../common/google_api_url'
require_relative '../classes/book_search'
require_relative '../classes/user_book'
require_relative '../classes/user_library'
require_relative '../common/errors'
require_relative '../common/exec_helper.rb'
require_relative '../common/command_line_parse.rb'

process_args!

#default
filename = File.join(File.dirname(__FILE__), "../saved_libraries/library.json")

o = {}

filename = command_line_parse!(filename, o)

#substitute \ for / if the machine is running windows
filename.gsub!(/\//, '\\') if ENV.values.any? { |v| v =~ /[A-Z]:\\Windows/i }

# Create or load the library, depending on whether or not the file already exists.
l = UserLibrary.new(filename)

#initialize the 
#perform the search, and display the results.
begin
  s = BookSearch.new(search: ARGV.join('+'), title: o[:title], author: o[:author], publisher: o[:publisher])

  #see BookSearch definition in classes/book_search.rb
  #the each method (and all Enumerable methods, like map) only operate on
  #the first five matches.
  books = s.map { |info| UserBook.new(info) }

  #print the resuls
  puts ""
  books.each_with_index do |b, i|
    keys = %w[title author publisher]
    n = i+1
    puts "-"*5 + "Match ##{n}" + "-"*5 
    keys.each do |k|
      puts "%s: %s" % [k.capitalize, b[k]]
    end
    puts ""
  end

  print "Enter a number (1-5) to add a book to your reading list:\n(or any other key to quit)\n"

  selection = STDIN.getch.chomp.to_i
  i = selection - 1
  puts ""
  exit if i < 0 or i > 4

  #add a book to the user's library
  l << books[i]
  l.save

rescue NoInternetError
  puts "\nNo internet connection.  Please connect to the internet and try again."
  puts ""
rescue SearchError 
  puts "\nThere was an error with your query; be careful to format it well"
  puts ""
  exit
rescue NoResults
  puts "\nNo results."
  puts ""
  exit
end
